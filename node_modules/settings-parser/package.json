{
  "name": "settings-parser",
  "version": "0.1.0",
  "description": "Parses Sass files to generate a settings file with a table of contents.",
  "repository": {
    "type": "git",
    "url": "https://github.com/zurb/foundation-settings-parser.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "gulp": "^3.8.8",
    "gulp-concat": "^2.4.1",
    "gulp-ignore": "^1.2.1",
    "gulp-inject-string": "0.0.2",
    "gulp-order": "^1.1.1",
    "gulp-rename": "^1.2.0",
    "gulp-util": "^3.0.1",
    "multiline": "^1.0.1",
    "rimraf-glob": "0.0.0",
    "vinyl-map": "^1.0.1"
  },
  "author": {
    "name": "ZURB"
  },
  "license": "MIT",
  "private": true,
  "readme": "# Foundation Settings Parser\n\nThis is a Gulp task that collects settings variables from Sass files for processing. Right now it does two things:\n\n - Combines the variables into a single `_settings.scss` file, organized by component, with each variable commented out.\n - Outputs each component's variables as an HTML partial, which can be consumed by Angular or Assemble. This allows us to automatically inject each component's Sass variables into the documentation automatically.\n\nCurrently the library is only being used—and is deliberately designed for—[Foundation for Apps](https://github.com/zurb/foundation-apps).\n\n## Usage\n\n### Install\n\nFor now the package is not distributed on npm, but it can be installed from GitHub:\n\n```json\n{\n  \"devDependencies\": {\n    \"foundation-settings-parser\": \"zurb/foundation-settings-parser\"\n  }\n}\n```\n\n### Setup\n\nThe parser will check every `.scss` file you hand it for text between two specific delimiters.\n\n```scss\n/// @Foundation.settings\n// Grid\n$total-columns: 12 !default;\n$container-width: rem-calc(900) !default;\n///\n```\n\nThe first line is the starting delimiter, and the last line is the ending delimiter. The second line contains the name of the component, which the parser uses to title the section, and build the table of contents.\n\n### Running the Task\n\nThe settings parser module exports the entire process as a single function, so you just have to drop it into a Gulp task, along with an array of file paths.\n\n```js\ngulp.task('settings', function() {\n  // Get extra weird by calling the module without assigning it to a variable!\n  return require('foundation-settings-parser')([\n    'scss/components/*.scss'\n  ]);\n});\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/zurb/foundation-settings-parser/issues"
  },
  "_id": "settings-parser@0.1.0",
  "dist": {
    "shasum": "08f82f0c15adc5fd3d5f20a32262143b37e98280"
  },
  "_resolved": "git://github.com/zurb/foundation-settings-parser#6194533498d0892c91e8faa2b2841421b7075a4a",
  "_from": "git://github.com/zurb/foundation-settings-parser",
  "_fromGithub": true
}
